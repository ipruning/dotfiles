#!/usr/bin/env bash
set -e
set -u
set -o pipefail

function logger() {
  local RED='\033[0;31m'
  local YELLOW='\033[1;33m'
  local GRAY='\033[0;90m'
  local NC='\033[0m'

  local message
  message=$1
  local loglevel
  loglevel=${2:-"INFO"}
  local loglevel_upper
  loglevel_upper=$(printf "%s" "$loglevel" | tr '[:lower:]' '[:upper:]')
  local timestamp
  timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

  local color
  color=$GRAY

  case "$loglevel_upper" in
  "ERROR")
    color=$RED
    ;;
  "WARN")
    color=$YELLOW
    ;;
  "INFO")
    if [ "${DRY_RUN:-}" = true ]; then
      color=$YELLOW
    else
      color=$GRAY
    fi
    ;;
  *)
    loglevel="INFO"
    loglevel_upper="INFO"
    color=$GRAY
    ;;
  esac

  printf "${color}[%s] [%s] %s${NC}\n" "$timestamp" "$loglevel_upper" "$message"
}

logger "Updating Homebrew..."
if command -v brew &>/dev/null; then
  brew update
  brew upgrade
  logger "Pruning Homebrew..."
  brew cleanup
  brew autoremove
fi

logger "Updating mise..."
if command -v mise &>/dev/null; then
  mise upgrade

  logger "Pruning mise..."
  mise prune --yes
  mise reshim
fi

logger "Upgrading GitHub CLI extensions..."
if command -v gh &>/dev/null; then
  gh extension upgrade --all
fi

logger "Updating tldr pages..."
if command -v tldr &>/dev/null; then
  tldr --update
fi

logger "Updating ya packages..."
if command -v ya &>/dev/null; then
  ya pkg upgrade
fi

logger "Backing up all packages..."
host="$(hostname -s)"
if command -v brew &>/dev/null; then
  brew bundle dump --file="$HOME/dotfiles/config/packages/brew_dump.${host}.txt" --force
  brew leaves | LC_ALL=en_US.UTF-8 sort >"$HOME/dotfiles/config/packages/brew_leaves.${host}.txt"
  brew list --installed-on-request | LC_ALL=en_US.UTF-8 sort >"$HOME/dotfiles/config/packages/brew_installed.${host}.txt"
fi
if command -v gh &>/dev/null; then
  gh extension list | awk '{print $3}' | LC_ALL=en_US.UTF-8 sort >"$HOME/dotfiles/config/packages/gh_extensions.${host}.txt"
fi
if [ -d "/Applications" ]; then
  find /Applications -maxdepth 1 -name "*.app" -exec basename {} .app \; | LC_ALL=en_US.UTF-8 sort >"$HOME/dotfiles/config/packages/macos_applications.${host}.txt"
fi
if [ -d "/Applications/Setapp" ]; then
  find /Applications/Setapp -maxdepth 1 -name "*.app" -exec basename {} .app \; | LC_ALL=en_US.UTF-8 sort >"$HOME/dotfiles/config/packages/macos_setapp.${host}.txt"
fi
